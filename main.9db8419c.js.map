{"version":3,"sources":["scripts/main.js"],"names":["body","document","appendNotification","message","isError","notification","createElement","className","setAttribute","textContent","appendChild","handlePromise","promise","then","catch","firstPromise","Promise","resolve","reject","setTimeout","addEventListener","secondPromise","resolvePromise","thirdPromise","leftClicked","rightClicked"],"mappings":";AAAA,aAGA,IAAMA,EAAOC,SAASD,KAEhBE,EAAqB,SAACC,GAASC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACvCC,EAAeJ,SAASK,cAAc,OAE5CD,EAAaE,UAAYH,EACrB,UACA,UAEJC,EAAaG,aAAa,UAAW,gBAErCH,EAAaI,YAAcN,EAC3BH,EAAKU,YAAYL,IAGbM,EAAgB,SAACC,GACrBA,EACGC,KAAK,SAACV,GAAYD,OAAAA,EAAmBC,KACrCW,MAAM,SAACX,GAAYD,OAAAA,EAAmBC,GAAS,MAG9CY,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,WAAW,WAETD,EAAO,+BACN,KAEHjB,SAASmB,iBAAiB,QAAS,WACjCH,EAAQ,kCAINI,EAAgB,IAAIL,QAAQ,SAACC,GAC3BK,IAAAA,EAAiB,WAAML,OAAAA,EAAQ,gCAErChB,SAASmB,iBAAiB,QAASE,GAEnCrB,SAASmB,iBAAiB,cAAeE,KAGrCC,EAAe,IAAIP,QAAQ,SAACC,GAC5BO,IAAAA,GAAc,EACdC,GAAe,EAEbH,EAAiB,WACjBE,GAAeC,GACjBR,EAAQ,+BAIZhB,SAASmB,iBAAiB,QAAS,WACjCI,GAAc,EACdF,MAGFrB,SAASmB,iBAAiB,cAAe,WACvCK,GAAe,EACfH,QAIJX,EAAcI,GACdJ,EAAcU,GACdV,EAAcY","file":"main.9db8419c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n/* eslint-disable prefer-promise-reject-errors */\n\nconst body = document.body;\n\nconst appendNotification = (message, isError = false) => {\n  const notification = document.createElement('div');\n\n  notification.className = isError\n    ? 'warning'\n    : 'success';\n\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.textContent = message;\n  body.appendChild(notification);\n};\n\nconst handlePromise = (promise) => {\n  promise\n    .then((message) => appendNotification(message))\n    .catch((message) => appendNotification(message, true));\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    reject('First promise was rejected');\n  }, 3000);\n\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const resolvePromise = () => resolve('Second promise was resolved');\n\n  document.addEventListener('click', resolvePromise);\n\n  document.addEventListener('contextmenu', resolvePromise);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  const resolvePromise = () => {\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  };\n\n  document.addEventListener('click', () => {\n    leftClicked = true;\n    resolvePromise();\n  });\n\n  document.addEventListener('contextmenu', () => {\n    rightClicked = true;\n    resolvePromise();\n  });\n});\n\nhandlePromise(firstPromise);\nhandlePromise(secondPromise);\nhandlePromise(thirdPromise);\n"]}